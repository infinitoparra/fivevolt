//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ZigBeeCoordinator.Lib.Models.Db
{
    public partial class WirelessScaleData
    {
    	private readonly static WirelessScaleDataFinder _finder = new WirelessScaleDataFinder();
    	public static WirelessScaleDataFinder Finder { get { return _finder; } }
    
    	static WirelessScaleData() {
    		ZigBeeCoordinator.Lib.Infrastructure.IocContainer.Instance.Compose(_finder);
    	}
    
        #region Primitive Properties
    
        public virtual int WirelessScaleDataId
        {
            get;
            set;
        }
    
        public virtual int UserId
        {
            get { return _userId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_userId != value)
                    {
                        if (CoordinatorUser != null && CoordinatorUser.UserId != value)
                        {
                            CoordinatorUser = null;
                        }
                        _userId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _userId;
    
        public virtual Nullable<int> ZigBeeDeviceId
        {
            get { return _zigBeeDeviceId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_zigBeeDeviceId != value)
                    {
                        if (ZigBeeDevice != null && ZigBeeDevice.ZigBeeDeviceId != value)
                        {
                            ZigBeeDevice = null;
                        }
                        _zigBeeDeviceId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _zigBeeDeviceId;
    
        public virtual System.DateTime ReceivedDateTime
        {
            get;
            set;
        }
    
        public virtual double Value
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual CoordinatorUser CoordinatorUser
        {
            get { return _coordinatorUser; }
            set
            {
                if (!ReferenceEquals(_coordinatorUser, value))
                {
                    var previousValue = _coordinatorUser;
                    _coordinatorUser = value;
                    FixupCoordinatorUser(previousValue);
                }
            }
        }
        private CoordinatorUser _coordinatorUser;
    
        public virtual ZigBeeDevice ZigBeeDevice
        {
            get { return _zigBeeDevice; }
            set
            {
                if (!ReferenceEquals(_zigBeeDevice, value))
                {
                    var previousValue = _zigBeeDevice;
                    _zigBeeDevice = value;
                    FixupZigBeeDevice(previousValue);
                }
            }
        }
        private ZigBeeDevice _zigBeeDevice;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCoordinatorUser(CoordinatorUser previousValue)
        {
            if (previousValue != null && previousValue.WirelessScaleDatas.Contains(this))
            {
                previousValue.WirelessScaleDatas.Remove(this);
            }
    
            if (CoordinatorUser != null)
            {
                if (!CoordinatorUser.WirelessScaleDatas.Contains(this))
                {
                    CoordinatorUser.WirelessScaleDatas.Add(this);
                }
                if (UserId != CoordinatorUser.UserId)
                {
                    UserId = CoordinatorUser.UserId;
                }
            }
        }
    
        private void FixupZigBeeDevice(ZigBeeDevice previousValue)
        {
            if (previousValue != null && previousValue.WirelessScaleDatas.Contains(this))
            {
                previousValue.WirelessScaleDatas.Remove(this);
            }
    
            if (ZigBeeDevice != null)
            {
                if (!ZigBeeDevice.WirelessScaleDatas.Contains(this))
                {
                    ZigBeeDevice.WirelessScaleDatas.Add(this);
                }
                if (ZigBeeDeviceId != ZigBeeDevice.ZigBeeDeviceId)
                {
                    ZigBeeDeviceId = ZigBeeDevice.ZigBeeDeviceId;
                }
            }
            else if (!_settingFK)
            {
                ZigBeeDeviceId = null;
            }
        }

        #endregion
    }
    
    public partial class WirelessScaleDataFinder {
    }
    
}
