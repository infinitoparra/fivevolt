//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ZigBeeCoordinator.Lib.Models.Db
{
    public partial class UserSetting
    {
    	private readonly static UserSettingFinder _finder = new UserSettingFinder();
    	public static UserSettingFinder Finder { get { return _finder; } }
    
    	static UserSetting() {
    		ZigBeeCoordinator.Lib.Infrastructure.IocContainer.Instance.Compose(_finder);
    	}
    
        #region Primitive Properties
    
        public virtual int UserSettingId
        {
            get;
            set;
        }
    
        public virtual int UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    if (CoordinatorUser != null && CoordinatorUser.UserId != value)
                    {
                        CoordinatorUser = null;
                    }
                    _userId = value;
                }
            }
        }
        private int _userId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Value
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual CoordinatorUser CoordinatorUser
        {
            get { return _coordinatorUser; }
            set
            {
                if (!ReferenceEquals(_coordinatorUser, value))
                {
                    var previousValue = _coordinatorUser;
                    _coordinatorUser = value;
                    FixupCoordinatorUser(previousValue);
                }
            }
        }
        private CoordinatorUser _coordinatorUser;

        #endregion
        #region Association Fixup
    
        private void FixupCoordinatorUser(CoordinatorUser previousValue)
        {
            if (previousValue != null && previousValue.UserSettings.Contains(this))
            {
                previousValue.UserSettings.Remove(this);
            }
    
            if (CoordinatorUser != null)
            {
                if (!CoordinatorUser.UserSettings.Contains(this))
                {
                    CoordinatorUser.UserSettings.Add(this);
                }
                if (UserId != CoordinatorUser.UserId)
                {
                    UserId = CoordinatorUser.UserId;
                }
            }
        }

        #endregion
    }
    
    public partial class UserSettingFinder {
    }
    
}
