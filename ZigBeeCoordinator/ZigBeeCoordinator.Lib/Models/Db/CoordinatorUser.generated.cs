//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ZigBeeCoordinator.Lib.Models.Db
{
    public partial class CoordinatorUser
    {
    	private readonly static CoordinatorUserFinder _finder = new CoordinatorUserFinder();
    	public static CoordinatorUserFinder Finder { get { return _finder; } }
    
    	static CoordinatorUser() {
    		ZigBeeCoordinator.Lib.Infrastructure.IocContainer.Instance.Compose(_finder);
    	}
    
        #region Primitive Properties
    
        public virtual int UserId
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }
    
        public virtual string Password
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<WirelessScaleData> WirelessScaleDatas
        {
            get
            {
                if (_wirelessScaleDatas == null)
                {
                    var newCollection = new FixupCollection<WirelessScaleData>();
                    newCollection.CollectionChanged += FixupWirelessScaleDatas;
                    _wirelessScaleDatas = newCollection;
                }
                return _wirelessScaleDatas;
            }
            set
            {
                if (!ReferenceEquals(_wirelessScaleDatas, value))
                {
                    var previousValue = _wirelessScaleDatas as FixupCollection<WirelessScaleData>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupWirelessScaleDatas;
                    }
                    _wirelessScaleDatas = value;
                    var newValue = value as FixupCollection<WirelessScaleData>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupWirelessScaleDatas;
                    }
                }
            }
        }
        private ICollection<WirelessScaleData> _wirelessScaleDatas;
    
        public virtual ICollection<UserSetting> UserSettings
        {
            get
            {
                if (_userSettings == null)
                {
                    var newCollection = new FixupCollection<UserSetting>();
                    newCollection.CollectionChanged += FixupUserSettings;
                    _userSettings = newCollection;
                }
                return _userSettings;
            }
            set
            {
                if (!ReferenceEquals(_userSettings, value))
                {
                    var previousValue = _userSettings as FixupCollection<UserSetting>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserSettings;
                    }
                    _userSettings = value;
                    var newValue = value as FixupCollection<UserSetting>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserSettings;
                    }
                }
            }
        }
        private ICollection<UserSetting> _userSettings;

        #endregion
        #region Association Fixup
    
        private void FixupWirelessScaleDatas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (WirelessScaleData item in e.NewItems)
                {
                    item.CoordinatorUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (WirelessScaleData item in e.OldItems)
                {
                    if (ReferenceEquals(item.CoordinatorUser, this))
                    {
                        item.CoordinatorUser = null;
                    }
                }
            }
        }
    
        private void FixupUserSettings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserSetting item in e.NewItems)
                {
                    item.CoordinatorUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserSetting item in e.OldItems)
                {
                    if (ReferenceEquals(item.CoordinatorUser, this))
                    {
                        item.CoordinatorUser = null;
                    }
                }
            }
        }

        #endregion
    }
    
    public partial class CoordinatorUserFinder {
    }
    
}
