//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ZigBeeCoordinator.Lib.Models.Db
{
    public partial class ZigBeeDevice
    {
    	private readonly static ZigBeeDeviceFinder _finder = new ZigBeeDeviceFinder();
    	public static ZigBeeDeviceFinder Finder { get { return _finder; } }
    
    	static ZigBeeDevice() {
    		ZigBeeCoordinator.Lib.Infrastructure.IocContainer.Instance.Compose(_finder);
    	}
    
        #region Primitive Properties
    
        public virtual int ZigBeeDeviceId
        {
            get;
            set;
        }
    
        public virtual byte[] DeviceAddress
        {
            get;
            set;
        }
    
        public virtual byte[] NetworkAddress
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedDateTime
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LastPacketDateTime
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ZigBeeDeviceTypeId
        {
            get { return _zigBeeDeviceTypeId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_zigBeeDeviceTypeId != value)
                    {
                        if (ZigBeeDeviceType != null && ZigBeeDeviceType.ZigBeeDeviceTypeId != value)
                        {
                            ZigBeeDeviceType = null;
                        }
                        _zigBeeDeviceTypeId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _zigBeeDeviceTypeId;

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<ZigBeeDeviceLog> ZigBeeDeviceLogs
        {
            get
            {
                if (_zigBeeDeviceLogs == null)
                {
                    var newCollection = new FixupCollection<ZigBeeDeviceLog>();
                    newCollection.CollectionChanged += FixupZigBeeDeviceLogs;
                    _zigBeeDeviceLogs = newCollection;
                }
                return _zigBeeDeviceLogs;
            }
            set
            {
                if (!ReferenceEquals(_zigBeeDeviceLogs, value))
                {
                    var previousValue = _zigBeeDeviceLogs as FixupCollection<ZigBeeDeviceLog>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupZigBeeDeviceLogs;
                    }
                    _zigBeeDeviceLogs = value;
                    var newValue = value as FixupCollection<ZigBeeDeviceLog>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupZigBeeDeviceLogs;
                    }
                }
            }
        }
        private ICollection<ZigBeeDeviceLog> _zigBeeDeviceLogs;
    
        public virtual ZigBeeDeviceType ZigBeeDeviceType
        {
            get { return _zigBeeDeviceType; }
            set
            {
                if (!ReferenceEquals(_zigBeeDeviceType, value))
                {
                    var previousValue = _zigBeeDeviceType;
                    _zigBeeDeviceType = value;
                    FixupZigBeeDeviceType(previousValue);
                }
            }
        }
        private ZigBeeDeviceType _zigBeeDeviceType;
    
        public virtual ICollection<Capability> Capabilities
        {
            get
            {
                if (_capabilities == null)
                {
                    var newCollection = new FixupCollection<Capability>();
                    newCollection.CollectionChanged += FixupCapabilities;
                    _capabilities = newCollection;
                }
                return _capabilities;
            }
            set
            {
                if (!ReferenceEquals(_capabilities, value))
                {
                    var previousValue = _capabilities as FixupCollection<Capability>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCapabilities;
                    }
                    _capabilities = value;
                    var newValue = value as FixupCollection<Capability>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCapabilities;
                    }
                }
            }
        }
        private ICollection<Capability> _capabilities;
    
        public virtual ICollection<WirelessScaleData> WirelessScaleDatas
        {
            get
            {
                if (_wirelessScaleDatas == null)
                {
                    var newCollection = new FixupCollection<WirelessScaleData>();
                    newCollection.CollectionChanged += FixupWirelessScaleDatas;
                    _wirelessScaleDatas = newCollection;
                }
                return _wirelessScaleDatas;
            }
            set
            {
                if (!ReferenceEquals(_wirelessScaleDatas, value))
                {
                    var previousValue = _wirelessScaleDatas as FixupCollection<WirelessScaleData>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupWirelessScaleDatas;
                    }
                    _wirelessScaleDatas = value;
                    var newValue = value as FixupCollection<WirelessScaleData>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupWirelessScaleDatas;
                    }
                }
            }
        }
        private ICollection<WirelessScaleData> _wirelessScaleDatas;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupZigBeeDeviceType(ZigBeeDeviceType previousValue)
        {
            if (previousValue != null && previousValue.ZigBeeDevices.Contains(this))
            {
                previousValue.ZigBeeDevices.Remove(this);
            }
    
            if (ZigBeeDeviceType != null)
            {
                if (!ZigBeeDeviceType.ZigBeeDevices.Contains(this))
                {
                    ZigBeeDeviceType.ZigBeeDevices.Add(this);
                }
                if (ZigBeeDeviceTypeId != ZigBeeDeviceType.ZigBeeDeviceTypeId)
                {
                    ZigBeeDeviceTypeId = ZigBeeDeviceType.ZigBeeDeviceTypeId;
                }
            }
            else if (!_settingFK)
            {
                ZigBeeDeviceTypeId = null;
            }
        }
    
        private void FixupZigBeeDeviceLogs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ZigBeeDeviceLog item in e.NewItems)
                {
                    item.ZigBeeDevice = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ZigBeeDeviceLog item in e.OldItems)
                {
                    if (ReferenceEquals(item.ZigBeeDevice, this))
                    {
                        item.ZigBeeDevice = null;
                    }
                }
            }
        }
    
        private void FixupCapabilities(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Capability item in e.NewItems)
                {
                    if (!item.ZigBeeDevices.Contains(this))
                    {
                        item.ZigBeeDevices.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Capability item in e.OldItems)
                {
                    if (item.ZigBeeDevices.Contains(this))
                    {
                        item.ZigBeeDevices.Remove(this);
                    }
                }
            }
        }
    
        private void FixupWirelessScaleDatas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (WirelessScaleData item in e.NewItems)
                {
                    item.ZigBeeDevice = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (WirelessScaleData item in e.OldItems)
                {
                    if (ReferenceEquals(item.ZigBeeDevice, this))
                    {
                        item.ZigBeeDevice = null;
                    }
                }
            }
        }

        #endregion
    }
    
    public partial class ZigBeeDeviceFinder {
    }
    
}
